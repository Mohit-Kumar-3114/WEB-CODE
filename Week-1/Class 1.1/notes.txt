
Question- What is JavaScript?
Answer- JavaScript is a high-level, interpreted programming language used to make web pages dynamic and interactive, 
running both on the client-side and server-side.





Question- What is static and dynamic typed language?
Answer- Static typed languages check variable types at compile time, before the execution of the code e.g., C, 
C++, Java. Dynamic typed languages check variables types at runtime, during execution of the code e.g., Ruby, 
Python, JavaScript.



Question- Why javascript is a dynamic language?
Answer- JavaScript is called a dynamic language because variable types are determined at runtime and can change 
during execution. When you declare a variable, you do not need to specify what type this variable is. 




Question- Explain single threaded nature of javascript?
Answer- JavaScript has a single call stack, so it can only process one task at a time. Even though it can handle 
asynchronous operations (like timers, network requests), these are managed by the event loop, not by multiple 
threads.



Question- What is compile-time and run-time?
Answer- Compile-time refers to the phase during which a program is translated from the source code into 
machine code or an intermediate code by a compiler. Whereas run-time, or execution time, is the period when 
a program is actually running and performing its tasks on a computer.




Question- What is difference between interpreted languages and compiled languages?
Answer- A compiled language translates code from a high-level programming language into machine code before the 
program runs, producing a complete executable file that can run independently. An interpreted language translates 
code from a high-level programming language into machine code line by line as the code runs, without creating a 
separate executable file.




Question- What is the difference between interpreter and compiler?
Answer- A compiler translates code from a high-level programming language into machine code before the program runs.
Produces a complete executable file that can run independently. An interpreter translates code written in a 
high-level programming language into machine code line-by-line as the code runs. No separate executable file is 
created.




Question- What are variables in javascript?
Answer- A JavaScript variable is simply a name of storage location. Three ways to create variables- let, var 
and const.




Question- What are datatypes in javascript?
Answer- Datatypes describe the type of data that variables can store. JavaScript data types are either primitive 
(Number, String, Boolean, Null, Undefined, Symbol, BigInt) or reference types like Objects and Arrays.




Question- What is hoisting in js?
Answer- Hoisting in JavaScript means that variable declarations and function declarations are moved to the top of 
their scope during the code execution, although initializations stay in their original place.
Example 1- sayHello(); // "Hello!" but function expressions and arrow functions show error even if var is used
          function sayHello() {
          console.log("Hello!");
          }
          // 

Example 2- console.log(myVar); // undefined but let and const shows error
          var myVar = 10;
          console.log(myVar); // 10
          
          // This is essentially interpreted as:
          var myVar; // Declaration is hoisted
          console.log(myVar); // undefined
          myVar = 10; // Initialization remains here
          console.log(myVar); // 10

For let and const, they’re also hoisted but remain in the Temporal Dead Zone (TDZ) until their actual declaration 
line — that’s why accessing them before declaration throws a ReferenceError.