
Question- What is fetch API?
Answer- It is promise based asynchronous function which work on web API and fetch some data.




Question- What is axios?
Answer- Axios is a third-party library for making HTTP requests in both the browser and Node.js environments. It was 
designed to be more feature-rich and user-friendly compared to fetch.




Question- What is hashing?
Answer- Hashing often refers to the process of securely storing and verifying passwords or credentials. Instead of 
storing plain-text passwords in a database, which can pose a security risk if the database is compromised, systems 
store password hashes. When a user creates or updates a password, it's hashed using a secure hash function. When a 
user attempts to log in, the provided password is hashed using the same hash function, and the resulting hash is 
compared to the stored hash in the database. If they match, the authentication is successful. Hashing is a one-way 
process. The original data cannot be derived from the hash. It's designed to be irreversible.




Question- What is encryption?
Answer- Encryption transforms data into an unreadable format (ciphertext) using an algorithm and a key. The main 
goal is to protect confidentiality by allowing authorized parties to decrypt and access the original data. 
Encryption is a reversible process using a specific key or keys. The ciphertext can be decrypted back to the 
original plaintext using the decryption key.




Question- What is json web tokens?
Answer- JWT stands for JSON Web Token. It's a compact and secure way to transmit information between parties as a 
JSON object. JWTs are commonly used for authentication and information exchange in web applications. They consist 
of three parts: a header specifying the token's type and the cryptographic algorithm used, a payload containing the 
information being transmitted, and a signature to ensure the token hasn't been tampered with. 

Eg- eyJhbGciOiAiSFMyNTYiLCAidHlwIjoiSldUIn0.eyJ1c2VybmFtZSI6ICJqhuX2RvZSJ9.kP1T-2cM-m71l89K8AGjyXJbSOmc3r3mJzUKm-Vs
1. Header: eyJhbGciOiAiSFMyNTYiLCAidHlwIjoiSldUIn0 (base64Url-encoded JSON { "alg": "HS256", "typ": "JWT" })
2. Payload: eyJ1c2VybmFtZSI6ICJqb2huX2RvZSJ9 (base64Url-encoded JSON { "username": "john_doe" })
3. Signature: kP1T-2cM-m71l89K8Ad6iGjyXJbSOmc3r3mJzUKm-Vs (base64Url-encoded signature created using the header, 
payload, and secret key)




Question- What is local storage in context to authentication?
Answer- A place in your browser where you can store some data. Usually things that are stored include- 
1. Authentication tokens 
2. User language preference 
3. User theme preference




Question- What is authentication?
Answer- Backend authentication refers to the process of confirming and validating the identity of a user or system 
trying to access a service or application.




Question- What is authorization?
Answer- Authorization refers to the process of determining what actions or activities an authenticated user is 
allowed to perform within a system or an application. It involves granting or denying access rights and permissions 
to resources based on the identity of the user.




Question- What is the use if try-catch block?
Answer- A try-catch block is used for error handling. It allows developers to manage and handle exceptions (errors) 
that might occur during the execution of their code.




Question- What is database?
Answwer- A database is an organized collection of structured information or data. It is designed to efficiently 
manage, store, retrieve, and manipulate data. 




Question- What are collections?
Answer-  A group of documents (records) within a database. It is equivalent to a table in relational databases and 
is used to organize and manage related data.




Question- What are acid properties?
Ansswer- Atomicity ensures that either everything in a task happens or nothing does. It is like buying a computer: 
you get all the parts, or you get none. Consistency means the database goes from one sensible state to another. 
Imagine rearranging a shelf, it's organized before and after, never messy in between. Isolation keeps different tasks 
from messing with each other. It's like having your own lane in traffic, others can't bump into your space. 
Durability ensures that once something's done, it stays that way. It's like saving a file, if the power goes out, 
your work isn't lost.




Question- What is cap theorem?
Answer- CAP stands for Consistency, Availability, and Partition tolerance. 
1. Consistency: All nodes in a distributed system have the same data at the same time, ensuring that concurrent 
transactions produce consistent results.
2. Availability: Every request to the system gets a response, even if some nodes in the system fail or are slow to 
respond. 
3. Partition tolerance: The system continues to operate despite network partitions (communication failures) that 
might occur between nodes, ensuring that the system can handle and recover from network failures.

The CAP theorem states that distributed system can only provide two of three properties simultaneously: consistency, 
availability, and partition tolerance.




Question- What is MongoDB?
Answer- It is a document database. It stores data in json format called bson. It is schemaless if we add data 
directly to database using mongodb compass etc.




Question- What is mongoose?
Answer- Mongoose is an object data modelling or mapper. It is a node.js library that act as a layer between server 
and database and make connections. It requires schema to make connections between server and database.




Question- What is dry principle?
Answer- DRY is a software development principle that stands for “Don't Repeat Yourself.” This principle means that 
your aim is to reduce repetitive patterns and duplicate code and logic.




