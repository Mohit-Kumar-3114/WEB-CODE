
Question- What are orms?
Answer- ORMs (Object-Relational Mapping tools) are software frameworks that allow developers to interact with 
databases using an object-oriented approach instead of writing raw SQL queries. 
Advantages of ORM:
1. Simplified Database Interactions: Makes working with databases easier by abstracting SQL queries.
2. Reduced Boilerplate Code: Automates repetitive tasks, reducing the amount of code developers need to write.
3. Improved Code Maintainability: Encourages cleaner code organization, making it easier to maintain and update.
4. Cross-Platform Compatibility: Provides compatibility across different database systems, allowing easier migration
and flexibility.




Question- What is prisma?
Answer- Prisma ORM is a next-generation Node.js and TypeScript ORM that unlocks a new level of developer experience 
when working with databases thanks to its intuitive data model, automated migrations, type-safety & auto-completion.
1. Data Model: Defines how data is structured and related.
2. Automated Migrations: Automatically manages changes to the database schema.
3. Type-Safety: Ensures data types are consistent and checked at compile time.
4. Auto-Completion: Provides suggestions and completes code as you type for faster development.




Question- What are auto-generated clients?
Answer- In Prisma, an autogenerated client is a library that Prisma generates based on your database schema. It 
allows you to interact with your database using a type-safe and easy-to-use API. Instead of writing raw SQL queries, 
you can use Prisma's autogenerated client to perform database operations like reading, writing, updating, and 
deleting records in a more intuitive, high-level way. For example, after defining a model in your Prisma schema 
(e.g., for `User`), Prisma will generate a client with methods like `findMany`, `create`, and `update` for that 
model. This client abstracts the SQL queries and provides type safety in your code, meaning you'll get 
auto-completion and type-checking for the database fields directly in your code editor.
